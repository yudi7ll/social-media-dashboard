{"version":3,"sources":["components/BigBox.js","components/SmallBox.js","components/Icons.js","App.js","serviceWorker.js","index.js"],"names":["BigBoxComponent","key","SocialIcon","socialMedia","user","followers","ArrowIcon","posts","postsTextColor","className","SmallBox","SocialMediaIcon","highlight","highlightCount","percentage","percentageColor","ArrowDown","xmlns","width","height","fill","fillRule","d","ArrowUp","Facebook","Instagram","id","x1","x2","y1","y2","offset","stopColor","Twitter","Youtube","BigBoxWithData","map","BigBox","SmallBoxWithData","App","useState","isDarkTheme","setIsDarkTheme","htmlFor","type","defaultValue","onClick","class","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1f27534c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction BigBoxComponent({\n    SocialIcon,\n    socialMedia,\n    user,\n    followers,\n    ArrowIcon,\n    posts,\n    postsTextColor = 'green'\n}, key) {\n\treturn (\n\t\t<div key={ key } className={ \"card__box card__box--large ribbon--\" + socialMedia }>\n\t\t\t<div className=\"icon-text-center\">\n\t\t\t\t<SocialIcon />\n\t\t\t\t<small className=\"text--gray\">{ user }</small>\n\t\t\t</div>\n\t\t\t<div className=\"card__followers\">\n\t\t\t\t<div className=\"text--big\">{ followers }</div>\n                <small className=\"text--gray\">{ socialMedia === 'youtube' ? 'SUBSCRIBERS' : 'FOLLOWERS' }</small>\n\t\t\t</div>\n\t\t\t<div className=\"icon-text-center\">\n                <ArrowIcon />\n                <small\n                    className={ 'text--' + postsTextColor } \n                >\n                    { posts + ' Today' }\n                </small>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nBigBoxComponent.propTypes = {\n    SocialIcon: PropTypes.func,\n    socialMedia: PropTypes.string,\n    user: PropTypes.string,\n    followers: PropTypes.number,\n    followersText: PropTypes.string,\n    ArrowIcon: PropTypes.func,\n    posts: PropTypes.number,\n    postsTextColor: PropTypes.string,\n}\n\nexport default BigBoxComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SmallBox({\n    SocialMediaIcon,\n    highlight,\n    highlightCount,\n    ArrowIcon,\n    percentage,\n    percentageColor\n}, key) {\n    return (\n        <div key={ key } className=\"card__box card__box--small\">\n            <div className=\"width--100\">\n                <div className=\"flex flex--start mb-1\">\n                    <div className=\"text--gray mb-1\">{ highlight }</div>\n                    <div>\n                        <SocialMediaIcon />\n                    </div>\n                </div>\n                <div className=\"flex flex--end mb-1\">\n                    <div className=\"text--bigger\">{ highlightCount }</div>\n                    <div>\n                        <ArrowIcon />\n                        <small className={ 'text--' + percentageColor }>{ percentage }</small>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nSmallBox.propTypes = {\n    SocialMediaIcon: PropTypes.func,\n    highlight: PropTypes.string,\n    highlightCount: PropTypes.number,\n    ArrowIcon: PropTypes.func,\n    percentage: PropTypes.string,\n    percentageColor: PropTypes.string\n}\n\nexport default SmallBox;\n","import React from \"react\";\n\nexport function ArrowDown() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"4\">\n      <path fill=\"#DC414C\" fillRule=\"evenodd\" d=\"M0 0l4 4 4-4z\"></path>\n    </svg>\n  );\n}\n\nexport function ArrowUp() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"4\">\n      <path fill=\"#1EB589\" fillRule=\"evenodd\" d=\"M0 4l4-4 4 4z\"></path>\n    </svg>\n  );\n}\n\nexport function Facebook() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n      <path\n        fill=\"#178FF5\"\n        d=\"M18.896 0H1.104C.494 0 0 .494 0 1.104v17.793C0 19.506.494 20 1.104 20h9.58v-7.745H8.076V9.237h2.606V7.01c0-2.583 1.578-3.99 3.883-3.99 1.104 0 2.052.082 2.329.119v2.7h-1.598c-1.254 0-1.496.597-1.496 1.47v1.928h2.989l-.39 3.018h-2.6V20h5.098c.608 0 1.102-.494 1.102-1.104V1.104A1.102 1.102 0 0018.896 0z\"\n      ></path>\n    </svg>\n  );\n}\n\n\nexport function Instagram() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n      <defs>\n        <linearGradient id=\"a\" x1=\"100%\" x2=\"0%\" y1=\"0%\" y2=\"100%\">\n          <stop offset=\"0%\" stopColor=\"#DF4896\"></stop>\n          <stop offset=\"50.913%\" stopColor=\"#EE877E\"></stop>\n          <stop offset=\"100%\" stopColor=\"#FDC366\"></stop>\n        </linearGradient>\n      </defs>\n      <path\n        fill=\"url(#a)\"\n        d=\"M10 1.802c2.67 0 2.987.01 4.042.059 2.71.123 3.975 1.409 4.099 4.099.048 1.054.057 1.37.057 4.04 0 2.672-.01 2.988-.057 4.042-.124 2.687-1.387 3.975-4.1 4.099-1.054.048-1.37.058-4.041.058-2.67 0-2.987-.01-4.04-.058-2.717-.124-3.977-1.416-4.1-4.1-.048-1.054-.058-1.37-.058-4.041 0-2.67.01-2.986.058-4.04.124-2.69 1.387-3.977 4.1-4.1 1.054-.048 1.37-.058 4.04-.058zM10 0C7.284 0 6.944.012 5.878.06 2.246.227.228 2.242.06 5.877.01 6.944 0 7.284 0 10s.012 3.057.06 4.123c.167 3.632 2.182 5.65 5.817 5.817 1.067.048 1.407.06 4.123.06s3.057-.012 4.123-.06c3.629-.167 5.652-2.182 5.816-5.817.05-1.066.061-1.407.061-4.123s-.012-3.056-.06-4.122C19.777 2.249 17.76.228 14.124.06 13.057.01 12.716 0 10 0zm0 4.865a5.135 5.135 0 100 10.27 5.135 5.135 0 000-10.27zm0 8.468a3.333 3.333 0 110-6.666 3.333 3.333 0 010 6.666zm5.338-9.87a1.2 1.2 0 100 2.4 1.2 1.2 0 000-2.4z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport function Twitter() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\">\n      <path\n        fill=\"#1DA1F2\"\n        d=\"M20 1.924a8.192 8.192 0 01-2.357.646A4.11 4.11 0 0019.448.3a8.22 8.22 0 01-2.606.996A4.096 4.096 0 0013.847 0c-2.65 0-4.596 2.472-3.998 5.037A11.648 11.648 0 011.392.752a4.109 4.109 0 001.27 5.478 4.086 4.086 0 01-1.858-.513C.76 7.616 2.122 9.395 4.095 9.79a4.113 4.113 0 01-1.853.07 4.106 4.106 0 003.833 2.849A8.25 8.25 0 010 14.41a11.616 11.616 0 006.29 1.843c7.618 0 11.922-6.434 11.663-12.205A8.354 8.354 0 0020 1.924z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport function Youtube() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n      <path\n        fill=\"#C4032B\"\n        d=\"M10 0C4.478 0 0 4.478 0 10c0 5.523 4.478 10 10 10 5.523 0 10-4.477 10-10 0-5.522-4.477-10-10-10zm3.7 14.077c-1.75.12-5.652.12-7.402 0-1.896-.13-2.117-1.059-2.131-4.077.014-3.024.237-3.947 2.131-4.077 1.75-.12 5.652-.12 7.403 0 1.897.13 2.117 1.059 2.132 4.077-.015 3.024-.237 3.947-2.132 4.077zM8.334 8.048l4.098 1.949-4.098 1.955V8.048z\"\n      ></path>\n    </svg>\n  );\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport BigBox from './components/BigBox';\nimport SmallBox from './components/SmallBox';\nimport {\n    Facebook,\n    Twitter,\n    Instagram,\n    Youtube,\n    ArrowUp,\n    ArrowDown,\n} from './components/Icons';\n\nconst BigBoxWithData = () => [\n    {\n        SocialIcon: Facebook,\n        socialMedia: 'facebook',\n        ArrowIcon: ArrowUp,\n        user: '@nathanf',\n        followers: '1987',\n        posts: '12',\n    },\n    {\n        SocialIcon: Twitter,\n        socialMedia: 'twitter',\n        ArrowIcon: ArrowUp,\n        user: '@nathanf',\n        followers: '1044',\n        posts: '99',\n    },\n    {\n        SocialIcon: Instagram,\n        socialMedia: 'instagram',\n        ArrowIcon: ArrowUp,\n        user: '@realnathanf',\n        followers: '11k',\n        posts: '1099'\n    },\n    {\n        SocialIcon: Youtube,\n        socialMedia: 'youtube',\n        ArrowIcon: ArrowDown,\n        user: 'Nathan F.',\n        followers: '8239',\n        posts: '144',\n        postsTextColor: 'red'\n    }\n].map(BigBox);\n\nconst SmallBoxWithData = () => [\n    {\n        SocialMediaIcon: Facebook,\n        highlight: 'Page Views',\n        highlightCount: '87',\n        ArrowIcon: ArrowUp,\n        percentage: '3%',\n        percentageColor: 'green'\n    },\n    {\n        SocialMediaIcon: Facebook,\n        highlight: 'Likes',\n        highlightCount: '52',\n        ArrowIcon: ArrowDown,\n        percentage: '2%',\n        percentageColor: 'red'\n    },\n    {\n        SocialMediaIcon: Instagram,\n        highlight: 'Likes',\n        highlightCount: '5462',\n        ArrowIcon: ArrowUp,\n        percentage: '2257%',\n        percentageColor: 'green'\n    },\n    {\n        SocialMediaIcon: Instagram,\n        highlight: 'Profile Views',\n        highlightCount: '52k',\n        ArrowIcon: ArrowUp,\n        percentage: '1375%',\n        percentageColor: 'green'\n    },\n    {\n        SocialMediaIcon: Twitter,\n        highlight: 'Retweets',\n        highlightCount: '117',\n        ArrowIcon: ArrowUp,\n        percentage: '303%',\n        percentageColor: 'green'\n    },\n    {\n        SocialMediaIcon: Twitter,\n        highlight: 'Likes',\n        highlightCount: '507',\n        ArrowIcon: ArrowUp,\n        percentage: '553%',\n        percentageColor: 'green'\n    },\n    {\n        SocialMediaIcon: Youtube,\n        highlight: 'Likes',\n        highlightCount: '107',\n        ArrowIcon: ArrowDown,\n        percentage: '19%',\n        percentageColor: 'red'\n    }, \n    {\n        SocialMediaIcon: Youtube,\n        highlight: 'Total Views',\n        highlightCount: '1407',\n        ArrowIcon: ArrowDown,\n        percentage: '12%',\n        percentageColor: 'red'\n    }\n].map(SmallBox);\n\nfunction App() {\n    const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n    return (\n        <div className={ isDarkTheme ? 'dark-theme' : 'light-theme' }>\n            <div className=\"container\">\n                <div className=\"header\">\n                    <div className=\"header__title\">\n                        <h1>Social Media Dashboard</h1>\n                        <h4 className=\"text--gray\">Total Followers: 23,004</h4>\n                    </div>\n                    <hr />\n                    <div className=\"header__switcher\">\n                        <label\n                            className=\"text--gray\"\n                            htmlFor=\"toggleThemeBtn\"\n                        >\n                            Dark Mode\n                        </label>\n                        <div className=\"switch\">\n                            <input\n                                type=\"checkbox\"\n                                id=\"toggleThemeBtn\"\n                                defaultValue={ isDarkTheme }\n                                onClick={ () => setIsDarkTheme(!isDarkTheme) }\n                            />\n                            <div className=\"switch__slider\"></div>\n                        </div>\n                    </div>\n                </div>\n                \n                <main>\n                    <div className=\"card\">\n                        <BigBoxWithData />\n                    </div>\n\n                    <h2 className=\"overview\">Overview - Today</h2>\n                    <div className=\"card\">\n                        <SmallBoxWithData />\n                    </div>\n                </main>\n\n                <div class=\"attribution\">\n                    Challenge by &nbsp;\n                    <a\n                        href=\"https://www.frontendmentor.io?ref=challenge\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Frontend Mentor\n                    </a>. &nbsp;\n                    Coded by &nbsp;\n                    <a\n                        href=\"https://github.com/yudi7ll\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Yudi\n                    </a>.\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}